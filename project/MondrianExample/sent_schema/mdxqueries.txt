    SELECT NON EMPTY Except(
       {[Location].[All Places].Children}, 
       {[Location].[China]}
    ) ON COLUMNS,
      {[Product].[All Products].[Bottled Water].Children} ON ROWS
    FROM [Places]
    WHERE [Measures].[frequency]

===== MDX Query =====

SELECT NON EMPTY Except(
   {[Place].[All Places].Children}, 
   {[Place].[NONE]}
) ON COLUMNS,
  {[Sentence].[All Sentences].[Ben?t, Stephen Vincent].Children} ON ROWS
FROM [Places]
WHERE [Measures].[frequency]


-- Selecting the top 10 places mentioned -- 
WITH SET TopPlaces AS 
'TopCount(  Except(
                     {[Place].[All Places].Children},
                     {[Place].[NONE]}
                  ), 
                  10, 
                  [Measures].[frequency])'

SELECT NON EMPTY Hierarchize(
   {[Sentence].[All Sentences]}) ON COLUMNS, 
TopPlaces ON ROWS
FROM [Places]
WHERE [Measures].[frequency]




Selecting tuples

SELECT 
([Place].[America], [Sentence].[All Sentences].[Curwood, James Oliver].[The Black Hunter.].[0-19].[17]) ON ROWS,
([Measures].[frequency]) ON COLUMNS 
FROM [Places]


Select only two places

SELECT 
{[Place].[Houston],[Place].[Canada]} ON ROWS,
{[Measures].[frequency]} ON COLUMNS 
FROM [Places]

SELECT 
{[Place].[Houston],[Place].[Canada]} ON ROWS,
  {[Sentence].[All Sentences]} ON COLUMNS
FROM [Places]

pretty much select everything no matter if
the place is null or not.

SELECT {[Place].[All Places]} ON COLUMNS,
  {[Sentence].[All Sentences]} ON ROWS
FROM [Places]
WHERE [Measures].[frequency]


SELECT 
{[Place].[Houston],[Place].[Canada]} ON ROWS,
{[Measures].[frequency]} ON COLUMNS 
FROM [Places]


Mentioning places found in certain sentences of a book

SELECT NON EMPTY Hierarchize
(
   {
      [Sentence].[Moodie, Susanna].[Roughing it in the Bush; or, Forest Life in Canada].[0-19].[0], 
      [Sentence].[Moodie, Susanna].[Roughing it in the Bush; or, Forest Life in Canada].[0-19].[1], 
      [Sentence].[Moodie, Susanna].[Roughing it in the Bush; or, Forest Life in Canada].[0-19].[2], 
      [Sentence].[Moodie, Susanna].[Roughing it in the Bush; or, Forest Life in Canada].[0-19].[3], 
      [Sentence].[Moodie, Susanna].[Roughing it in the Bush; or, Forest Life in Canada].[0-19].[4], 
      [Sentence].[Moodie, Susanna].[Roughing it in the Bush; or, Forest Life in Canada].[0-19].[5], 
      [Sentence].[Moodie, Susanna].[Roughing it in the Bush; or, Forest Life in Canada].[0-19].[6], 
      [Sentence].[Moodie, Susanna].[Roughing it in the Bush; or, Forest Life in Canada].[0-19].[7], 
      [Sentence].[Moodie, Susanna].[Roughing it in the Bush; or, Forest Life in Canada].[0-19].[8], 
      [Sentence].[Moodie, Susanna].[Roughing it in the Bush; or, Forest Life in Canada].[0-19].[9]
   }
) ON COLUMNS, 
NON EMPTY Except({[Place].[All Places].Children}, {[Place].[NONE]}) ON ROWS
from [Places]

Slice of Canada:

select { [Measures].[Frequency]} ON COLUMNS,
  {[Sentence].[All Sentences].Children} ON ROWS
from [Places]
where [Place].[Canada]


Omitting a member:
SELECT 
   Except
      ([Place].[All Places].Children ,
         {[Place].[NULL]}
      ) ON COLUMNS,
   {[Sentence].[All Sentences]} ON ROWS
FROM
   [Places]
WHERE
   ([Measures].[frequency])


===== MySQL query =====

SELECT t2.country, sum(turnover) 
FROM facts_sales as t1 INNER JOIN dim_location as t2 
ON t1.location_id = t2.location_id 
WHERE t2.country = 'United States';

SELECT t2.region, sum(turnover) 
FROM facts_sales as t1 INNER JOIN dim_location as t2 
ON t1.location_id = t2.location_id 
WHERE t2.country = 'United States'
GROUP BY t2.region;


